/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplicationhtmlunit.views;

import javaapplicationhtmlunit.htmlUnitUtils.ElevListerHtmlUnit;
import java.awt.Color;
import java.awt.Component;
import javaapplicationhtmlunit.data.ElevData;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andersjuulr.petersen
 */
public class ElevListerView extends javax.swing.JFrame {

    DefaultTableModel tableModel;
    private static ElevListerHtmlUnit elevListerHtmlUnit;

    /**
     * Creates new form NewJFrame
     */
    public ElevListerView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hentKlasseData = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        klasseListeTabel = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        seKritiskButton = new javax.swing.JButton();
        seAlleButton = new javax.swing.JButton();
        buttonWorkflow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        hentKlasseData.setText("Hent data");
        hentKlasseData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hentKlasseDataActionPerformed(evt);
            }
        });

        klasseListeTabel.setAutoCreateRowSorter(true);
        klasseListeTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        klasseListeTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                klasseListeTabelMouseClicked(evt);
            }
        });
        klasseListeTabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                klasseListeTabelKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(klasseListeTabel);

        jLabel1.setText("Data mangler - hent venligst data");

        seKritiskButton.setText("Vis kritiske");
        seKritiskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seKritiskButtonActionPerformed(evt);
            }
        });

        seAlleButton.setText("Vis alle");
        seAlleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seAlleButtonActionPerformed(evt);
            }
        });

        buttonWorkflow.setText("Procedure step! ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hentKlasseData, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seAlleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seKritiskButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                        .addComponent(buttonWorkflow)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hentKlasseData)
                    .addComponent(seKritiskButton)
                    .addComponent(seAlleButton)
                    .addComponent(buttonWorkflow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hentKlasseDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hentKlasseDataActionPerformed
        
        
        
        hentKlasseData.setEnabled(false);
        jLabel1.setText("forbinder til Lectio.dk vent veligst ...");

        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                jLabel1.setText("data hentet");

                elevListerHtmlUnit = new ElevListerHtmlUnit();
                elevListerHtmlUnit.getElevDataList();

                int row = 0;
                for (ElevData ed : elevListerHtmlUnit.elevArrayListe) {
                    Object[] rowList = {ed.navn, ed.almF, ed.skrF, ed.status};
                    tableModel.addRow(rowList);
                }

                hentKlasseData.setEnabled(true);
            }
        });


    }//GEN-LAST:event_hentKlasseDataActionPerformed

    private void seKritiskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seKritiskButtonActionPerformed
        if (elevListerHtmlUnit != null) {
            jLabel1.setText("Data vises for elever mere end 10% fravÃ¦r 15% skriftligt");
        }

        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }

        int row = 0;
        for (ElevData ed : elevListerHtmlUnit.elevArrayListe) {
            if (ed.almF > 10.0 || ed.skrF > 15.0) {
                System.out.println(ed.navn + " " + ed.skrF + " " + ed.almF);
                Object[] rowList = {ed.navn, ed.almF, ed.skrF, ed.status};
                tableModel.addRow(rowList);
                //this.klasseListeTabel.setBackground(Color.red);
            }
        }

    }//GEN-LAST:event_seKritiskButtonActionPerformed

    private void seAlleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seAlleButtonActionPerformed

        if (elevListerHtmlUnit != null) {
            jLabel1.setText("Data vises for alle elever");
        }

        while (tableModel.getRowCount() > 0) {
            tableModel.removeRow(0);
        }

        int row = 0;
        for (ElevData ed : elevListerHtmlUnit.elevArrayListe) {
            Object[] rowList = {ed.navn, ed.almF, ed.skrF, ed.status};
            tableModel.addRow(rowList);
        }
    }//GEN-LAST:event_seAlleButtonActionPerformed

    private void klasseListeTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_klasseListeTabelMouseClicked
        handleRowSelection();
    }//GEN-LAST:event_klasseListeTabelMouseClicked

    private void klasseListeTabelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_klasseListeTabelKeyReleased
        handleRowSelection();
    }//GEN-LAST:event_klasseListeTabelKeyReleased

    private void handleRowSelection() {
        int row = this.klasseListeTabel.getSelectedRow();
        
        String navn = (String)this.klasseListeTabel.getValueAt(row, 0);

        ElevData elev = elevListerHtmlUnit.getElevFromName(navn);
        
        jLabel1.setText("<html> NAVN:   " + elev.navn + "<br>STATUS: " + elev.status + "</html>" );
        
        setWorkflowButtonState(elev);       
        
    }
    
    private void setWorkflowButtonState(ElevData elev){
        if(elev != null && elev.status.compareTo(ElevData.StatusOk) == 0 && (elev.almF > 10 || elev.skrF > 15)){
            this.buttonWorkflow.setText("Start Workflow!");
            this.buttonWorkflow.setEnabled(true);
        }else{
            this.buttonWorkflow.setText("status ok");
            this.buttonWorkflow.setEnabled(false);
        }
    }
    
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ElevListerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ElevListerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ElevListerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ElevListerView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                ElevListerView nj = new ElevListerView();

                String col[] = {"Navn", "Alm.", "Skr.", "Status"};

                nj.tableModel = new MyTableModel(col, 0);

                nj.klasseListeTabel.setModel(nj.tableModel);

                nj.klasseListeTabel.getColumnModel().getColumn(0).setMinWidth(200);
                nj.klasseListeTabel.getColumnModel().getColumn(0).setPreferredWidth(200);

                nj.klasseListeTabel.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
                    @Override
                    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                        final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

                        if (column == 0 && elevListerHtmlUnit != null) {

                            ElevData e = elevListerHtmlUnit.getElevFromName((String) value);

                            if (e.almF > 10 && e.skrF > 15) {
                                c.setBackground(Color.RED);
                            } else {
                                c.setBackground(Color.LIGHT_GRAY);

                            }

                        }

                        return c;
                    }
                });

                nj.setVisible(true);
                
                nj.setWorkflowButtonState(null);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonWorkflow;
    private javax.swing.JButton hentKlasseData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable klasseListeTabel;
    private javax.swing.JButton seAlleButton;
    private javax.swing.JButton seKritiskButton;
    // End of variables declaration//GEN-END:variables
}
